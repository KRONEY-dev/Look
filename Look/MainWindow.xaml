<Window x:Class="Look.MainWindow" x:Name="MainWind"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Look"
        mc:Ignorable="d"
        Title="Look!" Height="450" Width="800" KeyDown="MainWind_KeyDown" MouseWheel="MainWind_MouseWheel">

    <Window.Background>
        <SolidColorBrush Color="White"/>
    </Window.Background>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="350*"/>
            <RowDefinition Height="61*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">

            <InkCanvas x:Name="Canvas_Draw_Panel" Cursor="ArrowCD" Background="Transparent" Panel.ZIndex="1">
                <InkCanvas.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="Canvas_Scale_Transf"/>
                        <RotateTransform  x:Name="Canvas_Rotate_Transf"/>
                    </TransformGroup>
                </InkCanvas.RenderTransform>
                <InkCanvas.Style>
                    <Style TargetType="InkCanvas">
                        <Setter Property="EditingMode" Value="None"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Height" Value="{Binding ElementName=Image_box, Path=Height}"/>
                        <Setter Property="Width" Value="{Binding ElementName=Image_box, Path=Width}"/>
                    </Style>
                </InkCanvas.Style>
            </InkCanvas>

            <Image x:Name="Image_box">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="Image_Scale_transf"/>
                        <RotateTransform x:Name="Image_Rotate_transf"/>
                    </TransformGroup>
                </Image.RenderTransform>
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Width" Value="1"/>
                        <Setter Property="Height" Value="1"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </Image.Style>
            </Image>

        </Grid>

        <StackPanel x:Name="Tool_Panel" Orientation="Vertical" VerticalAlignment="Bottom" Grid.Row="1">
            <CheckBox x:Name="Control_Panel_Button" Checked="Control_Panel_Button_Checked" Unchecked="Control_Panel_Button_Unchecked">
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="CheckBox">
                                            <Border x:Name="Check_border" Height="21" Width="42" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="Resource/Triger.png"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="BorderBrush" Value="LightGray"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="CheckBox">
                                            <Border x:Name="Check_border" Height="21" Width="42" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="Resource/Triger_bott.png"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="BorderBrush" Value="LightGray"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

            <Border x:Name="Tool_border" HorizontalAlignment="Center" VerticalAlignment="Bottom" Height="40" Width="400">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background" Value="#FF4343CB"/>
                        <Setter Property="BorderThickness" Value="3"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="Padding" Value="5"/>
                    </Style>
                </Border.Style>

                <Grid>
                    <StackPanel Orientation="Horizontal">

                        <Button x:Name="Rotation_Left_90" Click="Rotation_Left_90_Click" Foreground="Transparent">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Width" Value="30"/>
                                    <Setter Property="Margin" Value="5,0,10,0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}">
                                                    <Image Name="Rotation_Left_image">
                                                        <Image.Style>
                                                            <Style TargetType="{x:Type Image}">
                                                                <Setter Property="Source" Value="Resource/rotating-arrow-symbol_Left.png"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=Rotation_Left_image}" Value="True">
                                                                        <Setter Property="Source" Value="Resource/rotating-arrow-symbol_Left.png"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#FF4362CB"/>
                                                        <Setter Property="Opacity" Value="0.6"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button x:Name="Rotation_Right_90" Click="Rotation_Right_90_Click" Width="30">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Margin" Value="0,0,10,0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}">
                                                    <Image Name="Min_Button">
                                                        <Image.Style>
                                                            <Style TargetType="{x:Type Image}">
                                                                <Setter Property="Source" Value="Resource/rotating-arrow-symbol_RIght.png"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=Min_Button}" Value="True">
                                                                        <Setter Property="Source" Value="Resource/rotating-arrow-symbol_RIght.png"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property= "Background" Value="#FF4362CB"/>
                                                        <Setter Property="Opacity" Value="0.6"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>

                        <ToggleButton x:Name="Draw_Button" Checked="Draw_Button_Checked" Unchecked="Draw_Button_Unchecked">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Width" Value="60"/>
                                    <Setter Property="Margin" Value="5,0,0,0"/>
                                    <Setter Property="Content" Value="Draw on"/>
                                    <Setter Property="FontFamily" Value="Arial Black"/>
                                    <Setter Property="Foreground">
                                        <Setter.Value>
                                            <RadialGradientBrush>
                                                <GradientStop Color="Black" Offset="0.39"/>
                                                <GradientStop Color="White" Offset="0.406"/>
                                            </RadialGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border x:Name="ToggleBorder">
                                                    <Border.Background>
                                                        <LinearGradientBrush>
                                                            <GradientStop Color="Red" Offset="0.044"/>
                                                            <GradientStop Color="Orange" Offset="0.169"/>
                                                            <GradientStop Color="Yellow" Offset="0.281"/>
                                                            <GradientStop Color="Green" Offset="0.434"/>
                                                            <GradientStop Color="SkyBlue" Offset="0.598"/>
                                                            <GradientStop Color="Blue" Offset="0.739"/>
                                                            <GradientStop Color="#FF9851C9" Offset="0.88"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Setter Property="CornerRadius" Value="5"/>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="BorderBrush" Value="Black"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <ThicknessAnimation Duration="0:0:0:0.1" From="1" To="3" Storyboard.TargetProperty="BorderThickness"/>
                                                                                <DoubleAnimation Duration="0:0:0:0.1" From="1" To="0.7" Storyboard.TargetProperty="Opacity"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <ThicknessAnimation Duration="0:0:0:0.1" From="3" To="1" Storyboard.TargetProperty="BorderThickness"/>
                                                                                <DoubleAnimation Duration="0:0:0:0.1" From="0.7" To="1" Storyboard.TargetProperty="Opacity"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content" Value="Draw off"/>
                                            <Setter Property="FontSize" Value="11"/>
                                            <Setter Property="Foreground">
                                                <Setter.Value>
                                                    <RadialGradientBrush>
                                                        <GradientStop Color="Black" Offset="0.39"/>
                                                        <GradientStop Color="White" Offset="0.217"/>
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </StackPanel>

                    <CheckBox x:Name="Full_Screen" Checked="Full_Screen_Checked" Unchecked="Full_Screen_Unchecked">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Width" Value="30"/>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="CheckBox">
                                                    <Border x:Name="Check_border" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Setter Property="Padding" Value="2"/>
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <ImageBrush ImageSource="Resource/Full_S_Icon.png"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="BorderBrush" Value="LightGray"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="CheckBox">
                                                    <Border x:Name="Check_border" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <ImageBrush ImageSource="Resource/Low_S_Icon.png"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="BorderBrush" Value="LightGray"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>

                            </Style>
                        </CheckBox.Style>
                    </CheckBox>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

                        <ToggleButton x:Name="Canvas_Cleaner" Unchecked="Canvas_Cleaner_Unchecked" Checked="Canvas_Cleaner_Checked">
                            <ToggleButton.Background>
                                <SolidColorBrush Color="Transparent"/>
                            </ToggleButton.Background>
                            <Image x:Name="Clean_Image">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="Resource/Clean_ico.png"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=Canvas_Cleaner, Path=IsChecked}" Value="True">
                                                <Setter Property="Source" Value="Resource/Clean_ico_Akt.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Margin" Value="0,0,30,0"/>
                                    <Setter Property="Width" Value="20"/>
                                    <Setter Property="Height" Value="20"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <Slider x:Name="Zoom_Slider" ValueChanged="Zoom_Slider_ValueChanged">
                            <Slider.Style>
                                <Style TargetType="Slider">
                                    <Setter Property="Width" Value="100"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                                    <Setter Property="Minimum" Value="1"/>
                                    <Setter Property="Maximum" Value="10"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="IsMoveToPointEnabled" Value="True"/>
                                </Style>
                            </Slider.Style>
                        </Slider>
                    </StackPanel>
                </Grid>

            </Border>

        </StackPanel>
    </Grid>
</Window>
